import"./index.2064f4f4.js";import{c as t,A as m,M as i}from"./Props.6b395ec4.js";import"./iframe.7066666d.js";import"./jsx-runtime.5bea8752.js";import{T as c}from"./TokenGrid.da56bfe1.js";import{b as d}from"./index.e7705f58.js";import"./string.ee197102.js";import"./index.6388b453.js";function s(){return s=Object.assign?Object.assign.bind():function(n){for(var o=1;o<arguments.length;o++){var r=arguments[o];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(n[a]=r[a])}return n},s.apply(this,arguments)}const l={},u="wrapper";function p({components:n,...o}){return t(u,s({},l,o,{components:n,mdxType:"MDXLayout"}),t(i,{title:"Tokens/Fonts",mdxType:"Meta"}),t("h1",null,"Fonts"),t(c,{token:d,mdxType:"TokenGrid"}))}p.isMDXComponent=!0;const y=()=>{throw new Error("Docs-only story")};y.parameters={docsOnly:!0};const e={title:"Tokens/Fonts",includeStories:["__page"]},f={};e.parameters=e.parameters||{};e.parameters.docs={...e.parameters.docs||{},page:()=>t(m,{mdxStoryNameToKey:f,mdxComponentAnnotations:e},t(p,null))};const D=["__page"];export{D as __namedExportsOrder,y as __page,e as default};
//# sourceMappingURL=fonts.stories.607645f1.js.map
